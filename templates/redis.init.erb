#!/bin/sh
#
# redis - this script starts and stops the redis-server daemon
#
# chkconfig:   - 85 15
# description: Redis is an advanced key-value store
# processname: redis-<%= @title -%>
# config:      /etc/redis/<%= @title %>.conf
# pidfile:     /var/run/redis/<%= @title %>.pid

# Source function library.
. /lib/lsb/init-functions

REDIS_EXEC=<%= scope.lookupvar('redis::redis_bin_dir') %>/bin/redis-server
REDIS_NAME="redis-<%= @title -%>"
REDIS_PID="/var/run/redis/<%= @title %>.pid"
REDIS_LOCKFILE="/var/lock/redis-server-<%= @title -%>"
REDIS_CONF_FILE="/etc/redis/<%= @title %>.conf"
REDIS_LOG_FILE="/var/log/redis/<%= @title %>.log"
REDIS_USER=<%= @redis_user %>
REDIS_DIR=<%= @redis_dir %>

[ -x "$REDIS_EXEC" ] || exit 5

start() {
    local retval

    [ -f "$REDIS_CONF_FILE" ] || exit 6

    # lift the open file limit completely
    ulimit -n 65535

    # disable THP (see http://redis.io/topics/admin)
    echo never > /sys/kernel/mm/transparent_hugepage/enabled

    log_daemon_msg "Starting $REDIS_NAME"

    # wait to allow changes to take effect
    sleep 3

    # create required directories and set ownership
    mkdir -p $REDIS_DIR && chown $REDIS_USER $REDIS_DIR
    mkdir -p /var/log/redis && chown $REDIS_USER /var/log/redis
    mkdir -p /var/run/redis && chown $REDIS_USER /var/run/redis

    touch $REDIS_LOG_FILE && chown $REDIS_USER $REDIS_LOG_FILE

    start-stop-daemon --start --chuid $REDIS_USER --quiet --pidfile "$REDIS_PID" --retry 5 --exec "$REDIS_EXEC" --oknodo -- "$REDIS_CONF_FILE" >> $REDIS_LOG_FILE 2>&1

    retval=$?
    log_end_msg $retval
    [ $retval -eq 0 ] && touch "$REDIS_LOCKFILE"

    return $retval
}

stop() {
    local retval

    log_daemon_msg "Stopping $REDIS_NAME"
    start-stop-daemon --stop --quiet --signal QUIT --pidfile "$REDIS_PID" --retry 5 --oknodo --exec "$REDIS_EXEC"

    retval=$?
    log_end_msg $retval
    [ $retval -eq 0 ] && rm -f "$REDIS_LOCKFILE" "$REDIS_PID"

    return $retval
}

restart() {
    stop
    # wait to force Sentinel to failover
    sleep 35
    start
}

reload() {
    local retval

    log_daemon_msg "Stopping $REDIS_NAME"
    killproc -p"$pidfile" $redis -HUP
    start-stop-daemon --stop --quiet --signal HUP --pidfile "$REDIS_PID" --oknodo --exec "$REDIS_EXEC"

    retval=$?
    log_end_msg $retval
    return $retval
}

status() {
    local retval
    status_of_proc -p "$REDIS_PID" "$REDIS_EXEC" "$REDIS_NAME"
    retval=$?
    return $retval
}

status_q() {
    status >/dev/null 2>&1
}

case "$1" in
    start)
        status_q && exit 0
        start
        ;;
    stop)
        status_q || exit 0
        stop
        ;;
    restart|configtest|force-reload)
        restart
        ;;
    reload)
        rh_status_q || exit 7
        reload
        ;;
    status)
        status
        ;;
    condrestart|try-restart)
        status_q || exit 0
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
